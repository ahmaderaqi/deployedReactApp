{"ast":null,"code":"var _jsxFileName = \"/home/ahmad/netflix/Netflix-Clone/netflixmovies/src/components/Movie.js\",\n  _s = $RefreshSig$();\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport ModalMovie from './ModalMovie ';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Movie(props) {\n  _s();\n  useEffect(() => {\n    console.log(\"props\");\n    console.log(props);\n  }, []);\n  const [showFlag, setShowFlag] = useState(false);\n  const [clickedItem, setClickedItem] = useState({});\n  const [imagee, setImagee] = useState(\"1\");\n  const handleShow = item => {\n    console.log(item);\n    setClickedItem(item);\n    setShowFlag(true);\n  };\n  const handleclose = () => {\n    setShowFlag(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 3,\n      className: \"g-4\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '18rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: props.poster_path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: props.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: props.overview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => handleShow(props),\n              children: \"add to favorite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ModalMovie, {\n      showFlag: showFlag,\n      handleclose: handleclose,\n      movieData: clickedItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Movie, \"F0iDNSO5y6oD82itmXmVP5U5c88=\");\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["Button","Card","Col","Row","ModalMovie","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Movie","props","_s","console","log","showFlag","setShowFlag","clickedItem","setClickedItem","imagee","setImagee","handleShow","item","handleclose","children","xs","md","className","style","width","Img","variant","src","poster_path","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","title","Text","overview","onClick","movieData","_c","$RefreshReg$"],"sources":["/home/ahmad/netflix/Netflix-Clone/netflixmovies/src/components/Movie.js"],"sourcesContent":["import Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport ModalMovie from './ModalMovie ';\nimport { useState,useEffect } from 'react';\n\nfunction Movie(props){\n    useEffect(()=>{\n        console.log(\"props\")\n        console.log(props)\n    }, [])\n    const [showFlag,setShowFlag] = useState(false);\n    const [clickedItem,setClickedItem]=useState({});\n    const[imagee,setImagee]=useState(\"1\")\n\n    const handleShow = (item) =>{\n        console.log(item);\n        setClickedItem(item);\n        setShowFlag(true);\n    }\n    const handleclose = () =>{\n        \n        setShowFlag(false);\n    }\n    return(\n        <>\n        <Row xs={1} md={3} className=\"g-4\">\n                \n                     <Col>\n                        <Card style={{ width: '18rem' }}>\n                            <Card.Img variant=\"top\" src={props.poster_path} />\n                            <Card.Body>\n                                <Card.Title>{props.title}</Card.Title>\n                                <Card.Text>\n                                    <p>{props.overview}</p>\n                                    \n                                </Card.Text>\n                                <Button variant=\"primary\" onClick={()=>handleShow(props)}>add to favorite</Button>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                \n            </Row>\n\n        <ModalMovie showFlag={showFlag} handleclose={handleclose} movieData={clickedItem}  />\n        </>\n    );\n}\n\nexport default Movie;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}